<script>
  $(document).ready(() => {
    /* LETs & CONSTs */
    let $image = $("#image");
    const prenotazioni = JSON.parse(
      "<%= prenotazioni %>".replace(/&#34;/g, '"')
    );
    const metodiPagamento = JSON.parse(
      "<%= metodiPagamento %>".replace(/&#34;/g, '"')
    );

    // Espressioni regolari
    let intestatarioReg = /^[A-z]+\s[A-z]+/;
    let cartaReg = /^[0-9]{16}$/;
    let meseReg = /^0[1-9]$|^1[0-2]$/;
    let annoReg = /^[0-9]{2}$/;
    let cvvReg = /^[0-9]{3}$/;

    // Prendo la data di oggi
    const anno = Number(String(new Date().getFullYear()).slice(2));
    const mese = new Date().getMonth() + 1;
    /* --------------------------------------------------------- */

    /* ON REFRESH */
    // Modifico la navbar modificando l'opzione profilo,
    // ridondante in quanto riporta alla stessa pagina
    // e la trasformo nell'opzione "Home"
    $(".profile-nav").attr("href", "/").text("Home");

    $(".value-cell").text(prenotazioni.length);

    $("#imgupload").val("");
    $(".image-circle").css({
      "background-image": `
        <% if ( user.imagePath ) { %>
          url("<%= user.imagePath.slice(user.imagePath.indexOf("uploads")) %>")
        <% } else { %>
          url("assets/images/profile_pics/profile-placeholder.png")
        <% }%>
        `,
    });
    $("#msg").val("");

    /* --------------------------------------------------------- */

    /* PRENOTAZIONI */
    let ind = 0;
    if (prenotazioni.length === 0) {
      $(".prenotazioni-container").html(
        `
        <h4 class="text-muted"><b>Non hai nessuna prenotazione...</b>&nbsp;<i class="far fa-sad-tear"></i></h4>
        `
      );
    }
    prenotazioni.forEach((prenotazione, index) => {
      if (prenotazione.stato_prenotazione > 0) {
        ind += 1;
        $(".prenotazioni-container").append(
          `
            <div class="card pren-card">
              <div class="card-body">
                <div class="row">
                  <div class="col-sm-12 col-md-2">
                    <b>#${ind}</b>
                  </div>
                  <div class="col-sm-12 col-md-4">
                    <a style="padding:0; margin: 0" href="/inserzione/${
                      prenotazione.ref_inserzione
                    }">${prenotazione.inserzione.nome_inserzione}</a>
                  </div>
                  <div class="col-sm-12 col-md-3">
                    <b>${prenotazione.check_in}</b>
                  </div>
                  <div class="col-sm-12 col-md-3">
                    <b>${prenotazione.check_out}</b>
                  </div>
                </div>
                <div class="row">
                  <div class="col-sm-12 col-md-2">
                  </div>
                  <div class="col-sm-12 col-md-4">
                    <b>${prenotazione.inserzione.citta}</b>
                  </div>
                  <div class="col-sm-12 col-md-3">
                    <b>${prenotazione.inserzione.indirizzo}</b>
                  </div>
                  <div class="col-sm-12 col-md-3">
                    <b>${
                      prenotazione.n_ospiti_pren === 1
                        ? prenotazione.n_ospiti_pren + " ospite"
                        : prenotazione.n_ospiti_pren + " ospiti"
                    }</b>
                  </div>
                </div>
              </div>
              <div class="card-footer profile-pren-btns">
                <div class="row">
                  <div
                    class="col-6"
                    style="
                      display:flex;
                      align-items:center;
                      ${
                        prenotazione.stato_prenotazione === 1
                          ? "color: #bb8d02;"
                          : "color: #1b7731;"
                      }
                    ">
                    ${
                      prenotazione.stato_prenotazione === 1
                        ? "<b>STATO:</b>&nbsp;in attesa&nbsp;<i class='far fa-clock'></i>"
                        : "<b>STATO:</b>&nbsp;accettata&nbsp;<i class='far fa-check-circle'></i>"
                    }
                  </div>
                  <div class="col-6" style="display:flex; justify-content:flex-end">
                    <button id="contact${index}" class="btn btn-primary">Contatta</button>
                    <button id="cancel${index}" class="btn btn-danger">Annulla</button>
                  </div>

                </div>
              </div>
            </div>
        `
        );
      }
      $(`#cancel${index}`).on("click", () => {
        $("#confirmCanc")
          .on("show.bs.modal", () => {
            $(".cancel-content").text(
              "Sei sicuro di voler annullare questa prenotazione?"
            );
            $(".confirmC").on("click", () => {
              fetch("/profilo/cancella-pren", {
                method: "delete",
                body: JSON.stringify({ id_pren: prenotazione.id_prenotazione }),
                headers: { "Content-Type": "application/json" },
              })
                .then(async (res) => {
                  const response = await res.json();
                  if (response.success) {
                    $("#confirmCanc").modal("hide");
                    $("#successFailure")
                      .on("show.bs.modal", () => {
                        $("#successFailureLabel").html(
                          `Operazione completata!&nbsp;<i class="far fa-check-circle"></i>`
                        );
                        $("#successFailureContent").html(
                          `La prenotazione è stata annullata!`
                        );
                      })
                      .on("hide.bs.modal", () => {
                        window.location.reload();
                      })
                      .modal("show");
                  } else {
                    $("#successFailure")
                      .on("show.bs.modal", () => {
                        $("#successFailureLabel").html(
                          `Ops! Qualcosa è andato storto...&nbsp;<i class="far fa-frown"></i>`
                        );
                        $("#successFailureContent").html(
                          `Sembra che ci sia stato qualche errore durante l'elaborazione della richiesta! Riprova.`
                        );
                      })
                      .on("hide.bs.modal", () => {
                        window.location.reload();
                      })
                      .modal("show");
                  }
                })
                .catch((err) => console.log(err));
            });
          })
          .on("hidden.bs.modal", () => {
            $(".confirmC").off("click");
          })
          .modal("show");
      });
      $(`#contact${index}`).on("click", () => {
        $("#contactModal")
          .on("show.bs.modal", () => {
            $(".confirmM").on("click", () => {
              if ($("#msg").val() === "") {
                return;
              }

              const contact = JSON.stringify({
                id_host: prenotazione.ref_host,
                titolo: prenotazione.inserzione.nome_inserzione,
                message: $("#msg").val(),
              });
              fetch("/profilo/contatta-host", {
                method: "post",
                body: contact,
                headers: { "Content-Type": "application/json" },
              })
                .then(async (res) => {
                  const response = await res.json();
                  if (response.success) {
                    $("#contactModal").modal("hide");
                    $("#successFailure")
                      .on("show.bs.modal", () => {
                        $("#successFailureLabel").html(
                          `Operazione completata!&nbsp;<i class="far fa-check-circle"></i>`
                        );
                        $("#successFailureContent").html(
                          `Il messaggio è stato inviato!`
                        );
                      })
                      .on("hide.bs.modal", () => {
                        window.location.reload();
                      })
                      .modal("show");
                  } else {
                    $("#successFailure")
                      .on("show.bs.modal", () => {
                        $("#successFailureLabel").html(
                          `Ops! Qualcosa è andato storto...&nbsp;<i class="far fa-frown"></i>`
                        );
                        $("#successFailureContent").html(
                          `Sembra che ci sia stato qualche errore durante l'elaborazione della richiesta! Riprova.`
                        );
                      })
                      .on("hide.bs.modal", () => {
                        window.location.reload();
                      })
                      .modal("show");
                  }
                })
                .catch((err) => console.log(err));
            });
          })
          .on("hidden.bs.modal", () => {
            $(".confirmM").off("click");
          })
          .modal("show");
      });
    });
    /* --------------------------------------------------------- */

    /* SETTINGS */
    // GENERALI
    // img cropper
    function readURL(input) {
      if (input.files && input.files[0]) {
        let reader = new FileReader();

        reader.onload = function (e) {
          $image.cropper("destroy");
          $image.attr("src", "");
          $image.attr("src", e.target.result);
          $image.cropper({
            aspectRatio: 1 / 1,
            minContainerWidth: 300,
            minContainerHeight: 300,
            dragMode: "none",
            zoomOnWheel: false,
            crop: function (event) {
              console.log(event.detail.x);
              console.log(event.detail.y);
              console.log(event.detail.width);
              console.log(event.detail.height);
              console.log(event.detail.rotate);
              console.log(event.detail.scaleX);
              console.log(event.detail.scaleY);
            },
          });
        };

        reader.readAsDataURL(input.files[0]); // convert to base64 string
      }
    }
    $("#image-crop").on("hidden.bs.modal", function (e) {
      $image.cropper("destroy");
      $image.attr("src", "/assets/images/upload.png");
      $("#imgupload").val("");
    });

    $("#imgupload").on("change", function () {
      readURL(this);
    });

    $("#OpenImgUpload").on("click", function () {
      $("#imgupload").trigger("click");
    });

    $(".change-pic").on("click", () => {
      $("#image-crop").modal("show");
    });

    $("#save-avatar").on("submit", (e) => {
      e.preventDefault();

      if ($("#imgupload").val() === "") {
        return;
      }

      $("html").append(`
        <div class="spinner-container" style="width:100%; height:100%; position:absolute; top:0">
          <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
          </div>
        </div>
      `);

      $image.cropper("getCroppedCanvas").toBlob((blob) => {
        const formData = new FormData();
        formData.append("avatar", blob, "<%= user.id %>.png");

        fetch("/profilo/modifica-foto/avatarUtente/<%= user.id %>", {
          method: "PUT",
          body: formData,
        })
          .then(async (res) => {
            const response = await res.json();
            if (response.success) {
              $("#image-crop").modal("hide");
              $("#profile-pic").css({
                "background-image": `
                  <% if ( user.imagePath ) { %>
                      url("<%= user.imagePath.slice(user.imagePath.indexOf("uploads")) %>")
                  <% } else { %>
                      url("assets/images/profile_pics/profile-placeholder.png")
                  <% }%>
                  `,
              });
              $("#image-crop").modal("hide");
              $("#successFailure")
                .on("show.bs.modal", () => {
                  $("#successFailureLabel").html(
                    `Operazione completata!&nbsp;<i class="far fa-check-circle"></i>`
                  );
                  $("#successFailureContent").html(
                    `La foto è stata modificata correttamente!!`
                  );
                })
                .on("hide.bs.modal", () => {
                  window.location.reload();
                })
                .modal("show");
            } else {
              $("#image-crop").modal("hide");
              $("#successFailure")
                .on("show.bs.modal", () => {
                  $("#successFailureLabel").html(
                    `Ops! Qualcosa è andato storto...&nbsp;<i class="far fa-frown"></i>`
                  );
                  $("#successFailureContent").html(
                    `Sembra che ci sia stato qualche errore durante l'elaborazione della richiesta! Riprova.`
                  );
                })
                .on("hide.bs.modal", () => {
                  window.location.reload();
                })
                .modal("show");
            }
          })
          .catch((err) => {
            $(".spinner-container").remove();
            console.log(err);
          });
      }, "image/png");
    });

    // SICUREZZA
    // metodi pagamento
    $(".paymentBtn").on("click", () => {
      $("#payment")
        .modal("show")
        .on("hidden.bs.modal", () => {
          $("#payment-form-container").hide();
          $(".metodo-container")
            .removeClass("aggiungi-opened")
            .addClass("aggiungi-closed");
        });

      metodiPagamento.forEach((metodo, index) => {
        let owner = metodo.intestatario.split(" ");
        if ($(".payment-cards").length < metodiPagamento.length) {
          $(".payment-body").append(
            `
          <div class="card payment-cards metodo${index}">
            <div class="card-body">
              <button id="close${index}">&times;</button>
              <div class="row" style="margin-bottom: 10px">
                <div class="col-12">
                  <div class="owner">
                    <b>
                    ${
                      owner[0][0].toUpperCase() +
                      owner[0].slice(1) +
                      " " +
                      owner[1][0].toUpperCase() +
                      owner[1].slice(1)
                    }
                    </b>
                  </div>
                </div>
              </div>
              <div class="row">
                <div class="col-12 col-sm-9">
                  <div class="general">
                    <image class="credit-logo" src="/assets/icons/credit-card-solid.svg" style="width: 25px">
                    &nbsp;
                    ${
                      metodo.nome_circuito[0].toUpperCase() +
                      metodo.nome_circuito.slice(1)
                    }
                    &nbsp;
                    <span class="pass-value">************${metodo.codice_carta.slice(
                      12
                    )}</span>
                  </div>
                </div>
                <div class="col-12 col-sm-3">
                  <div class="date">
                    ${metodo.data_scadenza}
                  </div>
                </div>
              </div>
            </div>
          </div>
          `
          );
        }
        $(`#close${index}`)
          .css({
            position: "absolute",
            right: -10,
            top: -10,
            "background-color": "red",
            "border-radius": "50%",
            border: "none",
            color: "white",
            width: "25px",
            height: "25px",
          })
          .on("click", () => {
            fetch(`/profilo/metodo-pagamento?id=${metodo.id_metodo}`, {
              method: "DELETE",
            })
              .then(async (res) => {
                const response = await res.json();
                if (response.success) {
                  $("#payment").modal("hide");
                  $("#successFailure")
                    .on("show.bs.modal", () => {
                      $("#successFailureLabel").html(
                        `Operazione comletata!&nbsp;<i class="fas fa-check-circle"></i>`
                      );
                      $("#successFailureContent").html(
                        `Il metodo di pagamento è stato rimostto con successo!`
                      );
                    })
                    .on("hide.bs.modal", () => {
                      window.location.reload();
                    })
                    .modal("show");
                } else {
                  $("#successFailure")
                    .on("show.bs.modal", () => {
                      $("#successFailureLabel").html(
                        `Ops! Qualcosa è andato storto...&nbsp;<i class="far fa-frown"></i>`
                      );
                      $("#successFailureContent").html(
                        `Sembra che ci sia stato qualche errore durante l'elaborazione della richiesta! Riprova.`
                      );
                    })
                    .on("hide.bs.modal", () => {
                      window.location.reload();
                    })
                    .modal("show");
                }
              })
              .catch((err) => console.log(err));
          });
      });

      if (
        $(".aggiungi-closed").length === 0 &&
        $(".aggiungi-opened").length === 0
      ) {
        $(".payment-body").append(
          `
          <div class="card aggiungi-closed metodo-container">
            <div class="card-body aggiungi-metodo">
              <div id="select-metodo">
                  <label>
                    <b>Aggiungi un nuovo metodo di pagamento</b>
                  </label>
                </div>
                <div id="payment-form-container">
                  <form>
                    <div class="form-group">
                      <label for="inputIntestatario">Intestatario</label>
                      <input type="text" class="form-control metodo-pagamento" id="inputIntestatario" placeholder="Mario Rossi">
                    </div>
                    <div class="form-row">
                      <div class="form-group col-md-8">
                        <label for="inputCarta">Numero Carta</label>
                        <input type="text" class="form-control metodo-pagamento" id="inputCarta" placeholder="**** **** **** ****">
                      </div>
                      <div class="form-group col-md-4">
                        <label for="inputCircuito">Circuito</label>
                        <select id="inputCircuito" class="form-control metodo-pagamento">
                          <option value="" selected disabled>Scegli...</option>
                          <option value="mastercard">Mastercard</option>
                          <option value="visa">Visa</option>
                          <option value="american-express">American express</option>
                        </select>
                      </div>
                    </div>
                    <div class="form-row">
                      <div class="form-group col-md-3">
                        <label for="inputScadenza">Mese</label>
                        <input type="text" class="form-control metodo-pagamento" id="inputScadenzaM" placeholder="mm">
                      </div>
                      <div class="form-group col-md-3">
                        <label for="inputScadenza">Anno</label>
                        <input type="text" class="form-control metodo-pagamento" id="inputScadenzaA" placeholder="aa">
                      </div>
                      <div class="form-group col-md-6">
                        <label for="inputCvv">CVV</label>
                        <input type="text" class="form-control metodo-pagamento" id="inputCvv" placeholder="cvv">
                      </div>
                      <div class="form-group col-12 add-container">
                        <button class="btn btn-primary add">Aggiungi</button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
          `
        );
      }
      $(".add").on("click", (e) => {
        e.preventDefault();

        let flag = 1;
        // Aggiungo nuovo metodo di pagamento
        // Controllo che i campi siano pieni e corretti
        $(".metodo-pagamento").each(function (index, element) {
          if (
            $(this).val() === "" ||
            $(this).val() === null ||
            $(this).hasClass("is-invalid")
          ) {
            flag = 0;

            if (!$(this).hasClass("is-invalid")) {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputIntestatario") {
            if (intestatarioReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
            } else {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputCarta") {
            if (cartaReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
            } else {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputScadenzaM") {
            if (meseReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
              // Verifico se la data di scadenza non è inferiore all'anno
              // corrente
              if ($("#inputScadenzaA").val() !== "") {
                if (
                  Number($(this).val()) < mese &&
                  Number($("#inputScadenzaA").val()) <= anno
                ) {
                  $(this).addClass("is-invalid");
                  $("#inputScadenzaA").addClass("is-invalid");
                } else {
                  $(this).removeClass("is-invalid");
                  $("#inputScadenzaA").removeClass("is-invalid");
                }
              }
            } else {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputScadenzaA") {
            if (annoReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
              // Verifico se la data di scadenza non è inferiore all'anno
              // corrente
              if (
                Number($(this).val()) < anno ||
                (Number($(this).val()) === anno &&
                  Number($("#inputScadenzaM").val()) < mese)
              ) {
                $(this).addClass("is-invalid");
                $("#inputScadenzaM").addClass("is-invalid");
              } else {
                $(this).removeClass("is-invalid");
                $("#inputScadenzaM").removeClass("is-invalid");
              }
            } else {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputCvv") {
            if (cvvReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
            } else {
              $(this).addClass("is-invalid");
            }
          }
        });

        if (!flag) {
          return;
        }

        let metodo = {
          intestatario: $("#inputIntestatario").val(),
          codice_carta: $("#inputCarta").val(),
          nome_circuito: $("#inputCircuito").val(),
          cvv: $("#inputCvv").val(),
          scadenza_mese: $("#inputScadenzaM").val(),
          scadenza_anno: $("#inputScadenzaA").val(),
        };

        fetch(`/profilo/metodo-pagamento`, {
          method: "POST",
          body: JSON.stringify({ metodo }),
          headers: { "Content-Type": "application/json" },
        })
          .then(async (res) => {
            const response = await res.json();
            if (response.success) {
              $("#payment").modal("hide");
              $("#successFailure")
                .on("show.bs.modal", () => {
                  $("#successFailureLabel").html(
                    `Operazione comletata!&nbsp;<i class="fas fa-check-circle"></i>`
                  );
                  $("#successFailureContent").html(
                    `Nuovo metodo di pagamento inserito con successo!`
                  );
                })
                .on("hide.bs.modal", () => {
                  window.location.reload();
                })
                .modal("show");
            } else {
              $("#successFailure")
                .on("show.bs.modal", () => {
                  $("#successFailureLabel").html(
                    `Ops! Qualcosa è andato storto...&nbsp;<i class="far fa-frown"></i>`
                  );
                  $("#successFailureContent").html(
                    `Sembra che ci sia stato qualche errore durante l'elaborazione della richiesta! Riprova.`
                  );
                })
                .on("hide.bs.modal", () => {
                  window.location.reload();
                })
                .modal("show");
            }
          })
          .catch((err) => console.log(err));
      });

      $(".aggiungi-closed").on("click", function () {
        $("#payment-form-container").slideDown("slow");
        $(this).addClass("aggiungi-opened").removeClass("aggiungi-closed");
      });

      $("input[type=text], select").each(function (index, element) {
        $(this).on("change focusout input", function () {
          if ($(this).val() === "") {
            $(this).addClass("is-invalid");
          } else {
            $(this).removeClass("is-invalid");
          }

          if ($(this).prop("id") === "inputIntestatario") {
            if (intestatarioReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
            } else {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputCarta") {
            if (cartaReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
            } else {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputScadenzaM") {
            if (meseReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
              // Verifico se la data di scadenza non è inferiore all'anno
              // corrente
              if ($("#inputScadenzaA").val() !== "") {
                if (
                  Number($(this).val()) < mese &&
                  Number($("#inputScadenzaA").val()) <= anno
                ) {
                  $(this).addClass("is-invalid");
                  $("#inputScadenzaA").addClass("is-invalid");
                } else if (
                  Number($(this).val()) >= mese &&
                  annoReg.test($("#inputScadenzaA").val())
                ) {
                  $(this).removeClass("is-invalid");
                  $("#inputScadenzaA").removeClass("is-invalid");
                }
              }
            } else {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputScadenzaA") {
            if (annoReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
              // Verifico se la data di scadenza non è inferiore all'anno
              // corrente
              if (
                Number($(this).val()) < anno ||
                (Number($(this).val()) === anno &&
                  Number($("#inputScadenzaM").val()) < mese)
              ) {
                $(this).addClass("is-invalid");
                $("#inputScadenzaM").addClass("is-invalid");
              } else if (
                Number($(this).val()) >= anno &&
                meseReg.test($("#inputScadenzaM").val())
              ) {
                $(this).removeClass("is-invalid");
                $("#inputScadenzaM").removeClass("is-invalid");
              } else {
                $(this).removeClass("is-invalid");
              }
            } else {
              $(this).addClass("is-invalid");
            }
          }

          if ($(this).prop("id") === "inputCvv") {
            if (cvvReg.test($(this).val())) {
              $(this).removeClass("is-invalid");
            } else {
              $(this).addClass("is-invalid");
            }
          }
        });
      });
    });
    /* --------------------------------------------------------- */
  });
</script>
